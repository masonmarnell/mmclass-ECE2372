$date
	Mon Apr 13 15:16:48 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module testbench $end
$var wire 1 ! Y $end
$var reg 32 " I [31:0] $end
$var reg 5 # S [4:0] $end
$scope module uut $end
$var wire 32 $ I [31:0] $end
$var wire 5 % S [4:0] $end
$var wire 1 ! Y $end
$scope module U0 $end
$var wire 32 & I [31:0] $end
$var wire 5 ' S [4:0] $end
$var wire 1 ! Y $end
$var wire 32 ( W [31:0] $end
$scope module u0 $end
$var wire 5 ) A [4:0] $end
$var wire 12 * W [11:0] $end
$var wire 32 + D [31:0] $end
$scope module u0 $end
$var wire 3 , A [2:0] $end
$var wire 6 - W [5:0] $end
$var wire 8 . D [7:0] $end
$scope module u0 $end
$var wire 2 / A [1:0] $end
$var wire 4 0 W [3:0] $end
$var wire 4 1 D [3:0] $end
$scope module u0 $end
$var wire 1 2 A $end
$var wire 2 3 D [1:0] $end
$upscope $end
$scope module u1 $end
$var wire 1 4 A $end
$var wire 2 5 D [1:0] $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 1 6 A $end
$var wire 2 7 D [1:0] $end
$upscope $end
$upscope $end
$scope module u1 $end
$var wire 2 8 A [1:0] $end
$var wire 4 9 W [3:0] $end
$var wire 4 : D [3:0] $end
$scope module u0 $end
$var wire 1 ; A $end
$var wire 2 < D [1:0] $end
$upscope $end
$scope module u1 $end
$var wire 1 = A $end
$var wire 2 > D [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx >
x=
bx <
x;
bx :
bx 9
bx 8
bx 7
x6
bx 5
x4
bx 3
x2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
b1010101010101010101010101010101 &
bx %
b1010101010101010101010101010101 $
bx #
b1010101010101010101010101010101 "
x!
$end
#20
0!
b10000000000000000000000000000000 (
b10000000000000000000000000000000 +
b1000 1
b10000000 .
b100000001000 *
b1000 :
b10 3
02
b1010 0
b10 5
04
b0 /
b100010 -
b10 7
06
b10 <
0;
b1010 9
b10 >
0=
b0 ,
b0 8
b0 #
b0 %
b0 '
b0 )
#40
1!
b1000000000000000000000000000000 (
b1000000000000000000000000000000 +
b100000000100 *
b100 :
b1001 9
b1 >
1=
b1 8
b1 #
b1 %
b1 '
b1 )
#60
0!
b100000000000000000000000000000 (
b100000000000000000000000000000 +
b100000000010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b10 #
b10 %
b10 '
b10 )
#80
1!
b10000000000000000000000000000 (
b10000000000000000000000000000 +
b100000000001 *
b1 :
b101 9
b1 >
1=
b11 8
b11 #
b11 %
b11 '
b11 )
#100
0!
b1000000000000000000000000000 (
b1000000000000000000000000000 +
b1000000 .
b10000001000 *
b1000 :
b100001 -
b1 7
16
b10 <
0;
b1010 9
b10 >
0=
b1 ,
b0 8
b100 #
b100 %
b100 '
b100 )
#120
1!
b100000000000000000000000000 (
b100000000000000000000000000 +
b10000000100 *
b100 :
b1001 9
b1 >
1=
b1 8
b101 #
b101 %
b101 '
b101 )
#140
0!
b10000000000000000000000000 (
b10000000000000000000000000 +
b10000000010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b110 #
b110 %
b110 '
b110 )
#160
1!
b1000000000000000000000000 (
b1000000000000000000000000 +
b10000000001 *
b1 :
b101 9
b1 >
1=
b11 8
b111 #
b111 %
b111 '
b111 )
#180
0!
b100000000000000000000000 (
b100000000000000000000000 +
b100 1
b100000 .
b1000001000 *
b1000 :
b1001 0
b1 5
14
b1 /
b10010 -
b10 7
06
b10 <
0;
b1010 9
b10 >
0=
b10 ,
b0 8
b1000 #
b1000 %
b1000 '
b1000 )
#200
1!
b10000000000000000000000 (
b10000000000000000000000 +
b1000000100 *
b100 :
b1001 9
b1 >
1=
b1 8
b1001 #
b1001 %
b1001 '
b1001 )
#220
0!
b1000000000000000000000 (
b1000000000000000000000 +
b1000000010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b1010 #
b1010 %
b1010 '
b1010 )
#240
1!
b100000000000000000000 (
b100000000000000000000 +
b1000000001 *
b1 :
b101 9
b1 >
1=
b11 8
b1011 #
b1011 %
b1011 '
b1011 )
#260
0!
b10000000000000000000 (
b10000000000000000000 +
b10000 .
b100001000 *
b1000 :
b10001 -
b1 7
16
b10 <
0;
b1010 9
b10 >
0=
b11 ,
b0 8
b1100 #
b1100 %
b1100 '
b1100 )
#280
1!
b1000000000000000000 (
b1000000000000000000 +
b100000100 *
b100 :
b1001 9
b1 >
1=
b1 8
b1101 #
b1101 %
b1101 '
b1101 )
#300
0!
b100000000000000000 (
b100000000000000000 +
b100000010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b1110 #
b1110 %
b1110 '
b1110 )
#320
1!
b10000000000000000 (
b10000000000000000 +
b100000001 *
b1 :
b101 9
b1 >
1=
b11 8
b1111 #
b1111 %
b1111 '
b1111 )
#340
0!
b1000000000000000 (
b1000000000000000 +
b10 1
b1000 .
b10001000 *
b1000 :
b1 3
12
b110 0
b10 5
04
b10 /
b1010 -
b10 7
06
b10 <
0;
b1010 9
b10 >
0=
b100 ,
b0 8
b10000 #
b10000 %
b10000 '
b10000 )
#360
1!
b100000000000000 (
b100000000000000 +
b10000100 *
b100 :
b1001 9
b1 >
1=
b1 8
b10001 #
b10001 %
b10001 '
b10001 )
#380
0!
b10000000000000 (
b10000000000000 +
b10000010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b10010 #
b10010 %
b10010 '
b10010 )
#400
1!
b1000000000000 (
b1000000000000 +
b10000001 *
b1 :
b101 9
b1 >
1=
b11 8
b10011 #
b10011 %
b10011 '
b10011 )
#420
0!
b100000000000 (
b100000000000 +
b100 .
b1001000 *
b1000 :
b1001 -
b1 7
16
b10 <
0;
b1010 9
b10 >
0=
b101 ,
b0 8
b10100 #
b10100 %
b10100 '
b10100 )
#440
1!
b10000000000 (
b10000000000 +
b1000100 *
b100 :
b1001 9
b1 >
1=
b1 8
b10101 #
b10101 %
b10101 '
b10101 )
#460
0!
b1000000000 (
b1000000000 +
b1000010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b10110 #
b10110 %
b10110 '
b10110 )
#480
1!
b100000000 (
b100000000 +
b1000001 *
b1 :
b101 9
b1 >
1=
b11 8
b10111 #
b10111 %
b10111 '
b10111 )
#500
0!
b10000000 (
b10000000 +
b1 1
b10 .
b101000 *
b1000 :
b101 0
b1 5
14
b11 /
b110 -
b10 7
06
b10 <
0;
b1010 9
b10 >
0=
b110 ,
b0 8
b11000 #
b11000 %
b11000 '
b11000 )
#520
1!
b1000000 (
b1000000 +
b100100 *
b100 :
b1001 9
b1 >
1=
b1 8
b11001 #
b11001 %
b11001 '
b11001 )
#540
0!
b100000 (
b100000 +
b100010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b11010 #
b11010 %
b11010 '
b11010 )
#560
1!
b10000 (
b10000 +
b100001 *
b1 :
b101 9
b1 >
1=
b11 8
b11011 #
b11011 %
b11011 '
b11011 )
#580
0!
b1000 (
b1000 +
b1 .
b11000 *
b1000 :
b101 -
b1 7
16
b10 <
0;
b1010 9
b10 >
0=
b111 ,
b0 8
b11100 #
b11100 %
b11100 '
b11100 )
#600
1!
b100 (
b100 +
b10100 *
b100 :
b1001 9
b1 >
1=
b1 8
b11101 #
b11101 %
b11101 '
b11101 )
#620
0!
b10 (
b10 +
b10010 *
b10 :
b1 <
1;
b110 9
b10 >
0=
b10 8
b11110 #
b11110 %
b11110 '
b11110 )
#640
1!
b1 (
b1 +
b10001 *
b1 :
b101 9
b1 >
1=
b11 8
b11111 #
b11111 %
b11111 '
b11111 )
#660
